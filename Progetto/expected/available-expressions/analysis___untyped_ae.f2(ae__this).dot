digraph {
	"node0" [shape="rect",color="black",label=<b = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [] ]]<BR/>}} -&gt; [b]>];
	"node1" [shape="rect",color="gray",label=<f = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [] ]]<BR/>}} -&gt; [f]>];
	"node2" [shape="rect",color="gray",label=<true<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [a + c, b + c] ]]<BR/>}} -&gt; [true]>];
	"node3" [shape="rect",color="gray",label=<c = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [] ]]<BR/>}} -&gt; [c]>];
	"node4" [shape="rect",color="gray",label=<e = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [] ]]<BR/>}} -&gt; [e]>];
	"node5" [shape="rect",color="gray",label=<g = +(a, c)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [a + c, b + c] ]]<BR/>}} -&gt; [g]>];
	"node6" [shape="rect",color="gray",label=<b = +(a, d)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [a + c, a + d] ]]<BR/>}} -&gt; [b]>];
	"node7" [shape="rect",color="gray",label=<d = +(e, f)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [b + c, e + f] ]]<BR/>}} -&gt; [d]>];
	"node8" [shape="rect",color="gray",label=<j = +(+(+(a, b), c), d)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [a + b, a + b + c, a + b + c + d, a + c] ]]<BR/>}} -&gt; [j]>];
	"node9" [shape="rect",color="gray",label=<f = +(a, c)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [a + c, b + c] ]]<BR/>}} -&gt; [f]>];
	"node10" [shape="rect",color="gray",label=<true<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [a + c] ]]<BR/>}} -&gt; [true]>];
	"node11" [shape="rect",color="gray",label=<a = +(b, c)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [b + c] ]]<BR/>}} -&gt; [a]>];
	"node12" [shape="rect",color="gray",label=<h = +(c, f)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [a + c, a + d, c + f] ]]<BR/>}} -&gt; [h]>];
	"node13" [shape="rect",color="black",peripheries="2",label=<return j<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [a + b, a + b + c, a + b + c + d, a + c] ]]<BR/>}} -&gt; [ret_value@f2]>];
	"node1" -> "node4" [color="black"];
	"node2" -> "node5" [color="blue",style="dashed"];
	"node2" -> "node10" [color="red",style="dashed"];
	"node3" -> "node1" [color="black"];
	"node4" -> "node11" [color="black"];
	"node5" -> "node8" [color="black"];
	"node6" -> "node12" [color="black"];
	"node7" -> "node9" [color="black"];
	"node8" -> "node13" [color="black"];
	"node9" -> "node2" [color="black"];
	"node10" -> "node6" [color="blue",style="dashed"];
	"node10" -> "node8" [color="red",style="dashed"];
	"node11" -> "node7" [color="black"];
	"node12" -> "node10" [color="black"];
	"node0" -> "node3" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
